#!/usr/bin/env python

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
"""
The entry point script
"""

import os
import sys
from multiprocessing import freeze_support

import gi

gi.require_version("Gtk", "3.0")
gi.require_version("Gdk", "3.0")
from gi.repository import Gdk
from gi.repository import Gtk


class SplashScreen(Gtk.Window):
    def __init__(self):
        super().__init__(type=Gtk.WindowType.POPUP)
        self.set_default_size(400, 300)
        self.set_decorated(False)
        self.set_position(Gtk.WindowPosition.CENTER)

        css_provider = Gtk.CssProvider()
        path = "bauble/images/boot_splash.png"

        if getattr(sys, "frozen", False):
            path = os.path.join(
                sys._MEIPASS, "bauble", "images", "boot_splash.png"
            )
            if sys.platform == "win32":
                # Avoid driver letters and backslashes in paths (fails url() in
                # css below) NOTE on mac the relative path (../) also fails
                path = os.path.relpath(path, os.path.dirname(sys.executable))
                path = path.replace("\\", "/")

        css = f"""
        .splash-window {{
            background-image: url('{path}');
            background-size: cover;
            background-repeat: no-repeat;
            background-position: center;
            border-radius: 10px;
        }}
        .splash-label {{
            color: white;
            font-weight: bold;
            font-size: 18px;
        }}
        """
        css_provider.load_from_data(css.encode())
        Gtk.StyleContext.add_provider_for_screen(
            Gdk.Screen.get_default(),
            css_provider,
            Gtk.STYLE_PROVIDER_PRIORITY_APPLICATION,
        )
        self.get_style_context().add_class("splash-window")
        self.label = Gtk.Label(label="Initialising...")
        self.label.set_margin_top(260)
        self.label.get_style_context().add_class("splash-label")
        self.add(self.label)

        self.show_all()


splash = SplashScreen()

while Gtk.events_pending():
    Gtk.main_iteration()

# TODO WARNING temp monkey patch fix to prevent warnings
# START >>>
from gi.importer import DynamicImporter  # type:ignore [import-untyped]

if hasattr(DynamicImporter, "load_module"):
    # SEE: https://gitlab.gnome.org/GNOME/pygobject/-/issues/494
    # these 2 methods must be implimented.
    def create_module(self, spec):
        return self.load_module(spec.name)

    def exec_module(_self, _module):
        return

    DynamicImporter.create_module = create_module
    DynamicImporter.exec_module = exec_module
# <<< END

if __name__ == "__main__":
    freeze_support()

    from bauble import main

    sys.exit(main.main(splash))

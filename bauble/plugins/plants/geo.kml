## vim: ft=mako:fdm=marker
<%!
from bauble.utils import xml_safe
%>\
##
<%def name="poly_block(poly, holes)">
        <Polygon>
          <outerBoundaryIs>
            <LinearRing>
              <coordinates>
              ${poly}
              </coordinates>
            </LinearRing>
          </outerBoundaryIs>
        % for hole in holes:
          <innerBoundaryIs>
            <LinearRing>
              <coordinates>
                ${hole}
              </coordinates>
            </LinearRing>
          </innerBoundaryIs>
        % endfor
        </Polygon>
</%def>\
##
<%def name="multipoly_block(multi_poly)">
      <MultiGeometry>
    % for poly, holes in multi_poly:
        <Polygon>
          <outerBoundaryIs>
            <LinearRing>
              <coordinates>
                ${poly}
              </coordinates>
            </LinearRing>
          </outerBoundaryIs>
        % for hole in holes:
          <innerBoundaryIs>
            <LinearRing>
              <coordinates>
                ${hole}
              </coordinates>
            </LinearRing>
          </innerBoundaryIs>
        % endfor
        </Polygon>
    % endfor
      </MultiGeometry>
</%def>\
<?xml version="1.0" encoding="UTF-8"?>
<%
 geos = [value]
 if type(value).__name__ == 'Species':
   if value.distribution and value.distribution[0].geography:
     geos = [v.geography for v in value.distribution]
   else:
     raise ValueError("Species has no distributions recorded")
%>\
<kml xmlns="http://www.opengis.net/kml/2.2" xmlns:gx="http://www.google.com/kml/ext/2.2">
  <Document>
    <name>${xml_safe(value)}</name>
    <visibility>1</visibility>
    % for val in geos:
    <Placemark>
      <name>${val.name}</name>
      <description><![CDATA[
        <table>
          <tr>
            <td>WGSRPD Level:</td>
            <td>${['Continent', 'Region', 'Area', 'Unit'][val.level - 1]}</td>
          </tr>
          <tr>
            <td>WGSRPD Code:</td>
            <td>${val.code}</td>
          </tr>
          % if val.iso_code:
          <tr>
            <td>ISO Code:</td>
            <td>${val.iso_code}</td>
          </tr>
          % endif
        </table>
          ]]>
      </description>
      <visibility>1</visibility>
<%
if val.geojson:
    polygon = None
    multi_poly = []
    json = val.geojson
    if json.get('type') == 'Polygon':
        coords = json.get('coordinates')
        holes = []
        for sub_part in coords[1:]:
          holes.append(' '.join([str(f'{i[0]},{i[1]},0') for i in sub_part]))
        polygon = (' '.join([str(f'{i[0]},{i[1]},0') for i in coords[0]]), holes)
    elif json.get('type') == 'MultiPolygon':
        coords = json.get('coordinates')
        for part in coords:
            holes = []
            for sub_part in part[1:]:
                holes.append(' '.join([str(f'{i[0]},{i[1]},0') for i in sub_part]))
            multi_poly.append((' '.join([str(f'{i[0]},{i[1]},0') for i in part[0]]), holes))
%>\
% if multi_poly:
    ${multipoly_block(multi_poly)}
% elif polygon:
    ${poly_block(*polygon)}
% endif
    </Placemark>
    % endfor
  </Document>
</kml>

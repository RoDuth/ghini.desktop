## vim: ft=mako:fdm=marker
<%!
from bauble.utils import xml_safe
from bauble.utils.geo import transform
from bauble.meta import get_default
sys_crs = get_default('system_proj_string')
%>\
<%
def json_to_kml_point(coords):
    return ','.join(str(i) for i in coords + [0])

def json_to_kml_line(coords):
    return ' '.join(json_to_kml_point(i) for i in coords)

def json_to_kml_poly(coords):
    return ' '.join(json_to_kml_point(i) for i in coords[0])

point = line = poly = None

if value.geojson and sys_crs:
  # incase another system crs is used.
  geojson = transform(value.geojson, in_crs=sys_crs.value, out_crs='epsg:4326')
  # should always be a polygon but allow others incase
  if geojson.get('type') == 'Point':
    point = json_to_kml_point(value.geojson.get('coordinates'))
  elif geojson.get('type') == 'LineString':
    line = json_to_kml_line(geojson.get('coordinates'))
  elif geojson.get('type') == 'Polygon':
    plygn = geojson.get('coordinates')
    poly = json_to_kml_poly(plygn)
%>\
<?xml version="1.0" encoding="UTF-8"?>
<kml xmlns="http://www.opengis.net/kml/2.2" xmlns:gx="http://www.google.com/kml/ext/2.2">
  <Document>
    <name>${xml_safe(value.code)}</name>
    <visibility>1</visibility>
    <Placemark>
      <name>${xml_safe(value.code)}</name>
      <description><![CDATA[
        <table>
          <tr>
            <td>CODE:</td>
            <td>${xml_safe(value.code)}</td>
          </tr>
          % if value.name:
          <tr>
            <td>NAME:</td>
            <td>${xml_safe(value.name)}</td>
          </tr>
          % endif
          % if value.description:
          <tr>
            <td>DESCRIPTION:</td>
            <td>${xml_safe(value.description)}</td>
          </tr>
          % endif
        </table>
          ]]>
      </description>
      <visibility>1</visibility>
      % if point:
      <Point>
        <coordinates>
          ${point}
        </coordinates>
      </Point>
      % elif line:
      <LineString>
        <coordinates>
          ${line}
        </coordinates>
      </LineString>
      % elif poly:
      <Polygon>
        <altitudeMode>relativeToGround</altitudeMode>
        <outerBoundaryIs>
          <LinearRing>
            <coordinates>
              ${poly.replace(',0 ', ',0.2 ')}
            </coordinates>
          </LinearRing>
        </outerBoundaryIs>
      </Polygon>
      % endif
    </Placemark>
  </Document>
</kml>

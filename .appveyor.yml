image:
  - Visual Studio 2019
  - macos

platform:
  - x64

branches:
  only:
    - ghini-1.3-bbg

for:
-
  matrix:
    only:
      - image: macos

  install:
    - rm '/usr/local/include/X11'
    - brew install pygobject3 gtk+3 adwaita-icon-theme openjdk

  build_script:
    - . ~/venv3.9/bin/activate
    - cp -rf "$(find /usr/local/Cellar/pygobject3 -type d -name site-packages)"/* "$(find $VIRTUAL_ENV -type d -name site-packages)"
    - /usr/local/opt/openjdk/bin/jlink --output jre --add-modules java.base,java.logging,java.desktop,java.xml
    - scripts/get_fop.sh
    - pip install --upgrade pip
    - pip install psycopg2-binary
    - pip install .
    - pip install pyinstaller
    - pyinstaller --clean -w --noconfirm scripts/ghini_fop.spec
    - pip install dmgbuild
    - dmgbuild -s scripts/dmgbuild_settings.py "Ghini" Ghini.dmg   # NOTE: last 2 args are required but overidden in dmgbuild_settings.py

  artifacts:
    - path: dist/Ghini-*-installer.dmg

  test_script:
    - . ~/venv3.9/bin/activate
    - pip install pytest
    - pytest -sv
-
  matrix:
    only:
      - image: Visual Studio 2019
  environment:
    MSYSTEM: MINGW64
    CHERE_INVOKING: 1
    PATH: C:\msys64\usr\bin;C:\Program Files (x86)\NSIS\Bin;\Program Files\OpenJDK\jdk-18\bin;%PATH%

  install:
    - choco install openjdk -y  # NOTE Change PATH to match version
    # - bash -lc "pacman --noconfirm -Syuu"  # NOTE not normally required
    # - bash -lc "pacman --noconfirm -Syuu"  # NOTE not normally required
    - bash -lc "pacman --noconfirm --needed -S - < ./scripts/mingw64_pkglist.txt"
    - bash -lc "python --version"
    - bash -lc "python -m pip install --upgrade pip"
    - bash -lc "pip install pyproj-3.3.0-cp39-cp39-mingw_x86_64.whl"  # NOTE temp solution.

  build_script:
    - bash -lc "pip install ."
    - bash -lc "pip install pyinstaller"
    - bash -lc "python -m PyInstaller --clean -w --noconfirm scripts/ghini.spec"
    - makensis scripts\build-multiuser.nsi
    - jlink --output jre --add-modules java.base,java.logging,java.desktop,java.xml
    - bash -lc "scripts/get_fop.sh"
    - bash -lc "python -m PyInstaller --clean -w --noconfirm scripts/ghini_fop.spec"
    - makensis scripts\build-multiuser-fop.nsi

  artifacts:
    - path: dist/*-setup.exe

  test_script:
    - bash -lc "pytest -sv"

deploy:
  release: 'v1.3.0-b2' # :bump
  description: 'Rolling beta release.  From a v1.0 install: create a csv backup before upgrading, upgrade to this version, then restore the backup.'
  provider: GitHub
  auth_token:
    secure: OyO6yWwEa7RpZdY1m+zj5ZBtTYxDSb8Q/7+5dkX8nakRUrEgHeRHIwnTNLlwv9Fk
  draft: false
  prerelease: true
  force_update: true

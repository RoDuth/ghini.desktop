image:
  - Visual Studio 2019
  - macos-monterey

platform:
  - x64

skip_tags: true

for:
-
  matrix:
    only:
      - image: macos-monterey

  install:
    - brew install pygobject3 gtk+3 adwaita-icon-theme osm-gps-map unixodbc

  build_script:
    - . ~/venv3.11/bin/activate
    - find /usr/local/Cellar/pygobject3 -type d -name site-packages
    - export _PY_VER=$(python -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
    - cp -rf "$(find /usr/local/Cellar/pygobject3 -type d -name site-packages | grep --color=never $_PY_VER)"/* "$(find $VIRTUAL_ENV -type d -name site-packages)"
    - pip install --upgrade pip
    - pip install psycopg2-binary
    - pip install pyodbc
    - pip install pyobjc-framework-SystemConfiguration
    - pip install .
    - pip install pyinstaller==5.13.2
    - pyinstaller --clean --noconfirm scripts/ghini.spec
    - pip install dmgbuild
    - dmgbuild -s scripts/dmgbuild_settings.py "Ghini" Ghini.dmg   # NOTE: last 2 args are required but overidden in dmgbuild_settings.py

  artifacts:
    - path: dist/Ghini-*-installer.dmg

  test_script:
    - . ~/venv3.11/bin/activate
    - pip install pytest
    - pytest -sv
-
  matrix:
    only:
      - image: Visual Studio 2019

  init:
    - net start MSSQL$SQL2019

  environment:
    MSYSTEM: UCRT64
    CHERE_INVOKING: 1
    PATH: C:\msys64\usr\bin;C:\Program Files (x86)\NSIS\Bin;%PATH%
    COVERALLS_REPO_TOKEN:
      secure: dFRyBsYhvG/CAVHHXVL8JVuFWRBuB0zGmiH6W+fQUafSmAsIITs7P7mwOl2y2voK
    fop_ver: 2.9

  install:
    - choco install openjdk -y
    # - bash -lc "pacman --noconfirm -Syuu"  # NOTE not normally required
    # - bash -lc "pacman --noconfirm -Syuu"  # NOTE not normally required
    - bash -lc "pacman --noconfirm --needed -S - < ./scripts/mingw64_pkglist.txt"
    - bash -lc "python --version"
    - bash -lc "python -m pip install --upgrade pip"
    - bash -lc "SETUPTOOLS_USE_DISTUTILS=stdlib pip install pyproj"
    - bash -lc "SETUPTOOLS_USE_DISTUTILS=stdlib pip install greenlet"
    - bash -lc "SETUPTOOLS_USE_DISTUTILS=stdlib pip install git+https://github.com/RoDuth/pyodbc"
    - dir %WINDIR%\System32\msodbcsql*.dll
    # - bash -lc "SETUPTOOLS_USE_DISTUTILS=stdlib pip install pyodbc"

  build_script:
    - bash -lc "pip install ."
    - bash -lc "pip install pyinstaller==5.13.2"
    - bash -lc "python -m PyInstaller --clean --noconfirm scripts/ghini.spec"
    - for /f %%i in ('dir "C:\Program Files\OpenJDK\jdk*" /b') do "C:\Program Files"\OpenJDK\%%i\bin\jlink --output jre --add-modules java.base,java.logging,java.desktop,java.xml
    - bash -lc "scripts/get_fop.sh"
    - makensis scripts\build.nsi

  artifacts:
    - path: dist/*-setup.exe

  test_script:
    - bash -lc "pip install pytest"
    - bash -lc "pip install coverage"
    - bash -lc "pip install coveralls"
    - bash -lc "BAUBLE_TEST_DB_URI='mssql://sa:Password12!@localhost:1433/master?driver=ODBC+Driver+17+for+SQL+Server' coverage run -m pytest -sv"
    - bash -lc "coverage combine"
    - bash -lc "coverage report"
    - bash -lc "coveralls"

deploy:
  provider: GitHub
  on:
    branch: main
  release: 'v1.3.8' # :bump
  description: ''
  auth_token:
    secure: 1DQsnZ2QkM52hjZfjJbkSJwu/YLvBil97w/vikbLgHblXXLJ3xnFxgfN6eE/AQT8
  draft: false
  prerelease: false
  force_update: true

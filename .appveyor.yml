platform:
  - x64

environment:
  APPVEYOR_SAVE_CACHE_ON_ERROR: "true"
  MSYSTEM: UCRT64
  CHERE_INVOKING: 1
  PIP_BREAK_SYSTEM_PACKAGES: "true"
  fop_ver: 2.9
  matrix:
    - APPVEYOR_BUILD_WORKER_IMAGE: macos-sonoma
      TEST_DB: sqlite
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      TEST_DB: sqlite
      PATH: C:\msys64\usr\bin;C:\Program Files (x86)\NSIS\Bin;%PATH%
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
      TEST_DB: MSSQL
      COVERALLS_REPO_TOKEN:
        secure: dFRyBsYhvG/CAVHHXVL8JVuFWRBuB0zGmiH6W+fQUafSmAsIITs7P7mwOl2y2voK
      PATH: C:\msys64\usr\bin;%PATH%

skip_tags: true

for:
-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: macos-sonoma
        TEST_DB: sqlite

  install:
    - brew install pygobject3 gtk+3 adwaita-icon-theme osm-gps-map unixodbc

  build_script:
    - . ~/venv3.12/bin/activate
    - find /usr/local/Cellar/pygobject3 -type d -name site-packages
    - export _PY_VER=$(python -c "import sys; print(f'{sys.version_info.major}.{sys.version_info.minor}')")
    - cp -rf "$(find /usr/local/Cellar/pygobject3 -type d -name site-packages | grep --color=never $_PY_VER)"/* "$(find $VIRTUAL_ENV -type d -name site-packages)"
    - pip install --upgrade pip
    - pip install psycopg2-binary
    - pip install pyodbc
    - pip install pyobjc-framework-SystemConfiguration
    - pip install .
    - pip install pyinstaller==5.13.2
    - pyinstaller --clean --noconfirm scripts/ghini.spec
    - pip install dmgbuild==1.6.1
    - dmgbuild -s scripts/dmgbuild_settings.py "Ghini" Ghini.dmg   # NOTE: last 2 args are required but overidden in dmgbuild_settings.py

  artifacts:
    - path: dist/Ghini-*-installer.dmg

  test_script:
    - . ~/venv3.12/bin/activate
    - pip install pytest
    - pytest -sv
-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
        TEST_DB: sqlite

  install:
    - if not exist jre\ choco install openjdk -y
    # cutting edge on MSYS2 can be dangerous
    # - bash -lc "pacman --noconfirm -Syuu"  # Core update.  see: https://msys2.org/docs/ci/
    # - bash -lc "pacman --noconfirm -Syuu"  # Normal update
    - bash -lc "pacman --noconfirm --needed -S - < ./scripts/mingw64_pkglist.txt"
    - bash -lc "python --version"
    - bash -lc "python -m pip install --upgrade pip"
    - dir %WINDIR%\System32\msodbcsql*.dll
    # wheels cache
    - if not exist wheels\ bash -lc "pip wheel git+https://github.com/RoDuth/pyodbc --wheel-dir wheels"
    - bash -lc "pip wheel pyproj --wheel-dir wheels --find-links wheels"
    - bash -lc "pip wheel dukpy --wheel-dir wheels --find-links wheels"
    - bash -lc "pip wheel 'SQLAlchemy<2.0' --wheel-dir wheels --find-links wheels"
    - bash -lc "pip wheel markupsafe --wheel-dir wheels --find-links wheels"
    - dir wheels

  build_script:
    - bash -lc "pip install pyodbc --find-links wheels"
    - bash -lc "pip install . --find-links wheels"
    - bash -lc "pip install pyinstaller==5.13.2"
    - bash -lc "python -m PyInstaller --clean --noconfirm scripts/ghini.spec"
    - if not exist jre\ for /f %%i in ('dir "C:\Program Files\OpenJDK\jdk*" /b') do "C:\Program Files"\OpenJDK\%%i\bin\jlink --output jre --add-modules java.base,java.logging,java.desktop,java.xml
    - dir jre
    - if not exist fop-%fop_ver%\ bash -lc "scripts/get_fop.sh"
    - dir fop-%fop_ver%
    - makensis scripts\build.nsi

  artifacts:
    - path: dist/*-setup.exe

  test_script:
    - bash -lc "pip install pytest"
    - bash -lc "python -m pytest -sv"
-
  matrix:
    only:
      - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
        TEST_DB: MSSQL

  init:
    - net start MSSQL$SQL2019

  install:
    # cutting edge on MSYS2 can be dangerous
    # - bash -lc "pacman --noconfirm -Syuu"  # Core update.  see: https://msys2.org/docs/ci/
    # - bash -lc "pacman --noconfirm -Syuu"  # Normal update
    - bash -lc "pacman --noconfirm --needed -S - < ./scripts/mingw64_pkglist.txt"
    - bash -lc "python --version"
    - bash -lc "python -m pip install --upgrade pip"
    - dir %WINDIR%\System32\msodbcsql*.dll
    # wheels cache
    - if not exist wheels\ bash -lc "pip wheel git+https://github.com/RoDuth/pyodbc --wheel-dir wheels"
    - bash -lc "pip wheel pyproj --wheel-dir wheels --find-links wheels"
    - bash -lc "pip wheel dukpy --wheel-dir wheels --find-links wheels"
    - bash -lc "pip wheel 'SQLAlchemy<2.0' --wheel-dir wheels --find-links wheels"
    - bash -lc "pip wheel markupsafe --wheel-dir wheels --find-links wheels"
    - dir wheels

  build_script:
    - bash -lc "pip install pyodbc --find-links wheels"
    - bash -lc "pip install . --find-links wheels"

  test_script:
    - bash -lc "pip install pytest"
    - bash -lc "pip install coverage"
    - bash -lc "pip install coveralls"
    - bash -lc "BAUBLE_TEST_DB_URI='mssql://sa:Password12!@localhost:1433/master?driver=ODBC+Driver+17+for+SQL+Server' coverage run -m pytest -sv"
    - bash -lc "coverage combine"
    - bash -lc "coverage report"
    - bash -lc "coveralls"

cache:
  - wheels -> setup.py
  - fop-$(fop_ver) -> scripts\get_fop.sh
  - jre -> scripts\get_fop.sh


deploy:
  provider: GitHub
  on:
    branch: main
  release: 'v1.3.13' # :bump
  description: ''
  auth_token:
    secure: PyLgbGtLbCudxF0/SAjVBmCRTu6zg6ac6+eGO9OnwP6Fi/zKtx0TYlwxL/uWrNcz
  draft: false
  prerelease: false
  force_update: true

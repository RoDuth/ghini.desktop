image:
  - Visual Studio 2019
  - macos-monterey

platform:
  - x64

skip_tags: true

for:
-
  matrix:
    only:
      - image: macos-monterey

  install:
    - brew install pygobject3 gtk+3 adwaita-icon-theme openjdk
    - brew install unixodbc

  build_script:
    - . ~/venv3.10/bin/activate
    - cp -rf "$(find /usr/local/Cellar/pygobject3 -type d -name site-packages | tail -n 1)"/* "$(find $VIRTUAL_ENV -type d -name site-packages)"
    - /usr/local/opt/openjdk/bin/jlink --output jre --add-modules java.base,java.logging,java.desktop,java.xml
    - scripts/get_fop.sh
    - pip install --upgrade pip
    - pip install psycopg2-binary
    - pip install pyodbc
    - pip install .
    - pip install pyinstaller
    - pyinstaller --clean --noconfirm scripts/ghini_fop.spec
    - pip install dmgbuild
    - dmgbuild -s scripts/dmgbuild_settings.py "Ghini" Ghini.dmg   # NOTE: last 2 args are required but overidden in dmgbuild_settings.py

  artifacts:
    - path: dist/Ghini-*-installer.dmg

  test_script:
    - . ~/venv3.10/bin/activate
    - pip install pytest
    - pytest -sv
-
  matrix:
    only:
      - image: Visual Studio 2019
  environment:
    MSYSTEM: MINGW64
    CHERE_INVOKING: 1
    PATH: C:\msys64\usr\bin;C:\Program Files (x86)\NSIS\Bin;%PATH%

  install:
    - choco install openjdk -y  # NOTE Change PATH to match version
    # - bash -lc "pacman --noconfirm -Syuu"  # NOTE not normally required
    # - bash -lc "pacman --noconfirm -Syuu"  # NOTE not normally required
    - bash -lc "pacman --noconfirm --needed -S - < ./scripts/mingw64_pkglist.txt"
    - bash -lc "python --version"
    - bash -lc "python -m pip install --upgrade pip"
    - bash -lc "SETUPTOOLS_USE_DISTUTILS=stdlib pip install git+https://github.com/pyproj4/pyproj.git"
    - bash -lc "SETUPTOOLS_USE_DISTUTILS=stdlib pip install git+https://github.com/RoDuth/pyodbc"
    # - bash -lc "SETUPTOOLS_USE_DISTUTILS=stdlib pip install pyodbc"

  build_script:
    - bash -lc "pip install ."
    - bash -lc "pip install pyinstaller"
    - bash -lc "python -m PyInstaller --clean --noconfirm scripts/ghini.spec"
    - makensis scripts\build-multiuser.nsi
    - for /f %%i in ('dir "C:\Program Files\OpenJDK\jdk*" /b') do "C:\Program Files"\OpenJDK\%%i\bin\jlink --output jre --add-modules java.base,java.logging,java.desktop,java.xml
    - bash -lc "scripts/get_fop.sh"
    - bash -lc "python -m PyInstaller --clean --noconfirm scripts/ghini_fop.spec"
    - makensis scripts\build-multiuser-fop.nsi

  artifacts:
    - path: dist/*-setup.exe

  test_script:
    - bash -lc "pytest -sv"

deploy:
  provider: GitHub
  on:
    branch: main
  release: 'v1.3.3' # :bump
  description: ''
  auth_token:
    secure: 1DQsnZ2QkM52hjZfjJbkSJwu/YLvBil97w/vikbLgHblXXLJ3xnFxgfN6eE/AQT8
  draft: false
  prerelease: false
  force_update: true
